#!/bin/bash

########################
# Function definitions #
########################

source "$(dirname $0)/measurement-functions"

function run_test {
  local tmp avg1 stddev1 avg2 stddev2 avg4 stddev4 p

  tmp="/tmp/test-timing.$$"
  rm -f "${tmp}"

  p=1
  test_output="${1}-p${p}.out" measure_runtime "$@" -p${psep}${p} "${test_args}" | avgstddev > "$tmp"
  read avg1 stddev1 vsz1 vszdev1 < "$tmp"
  echo "Average time: ${avg1} +/- ${stddev1} seconds." \
       " VSZ: ${vsz1} +/- ${vszdev1} KB"

  p=2
  test_output="${1}-p${p}.out" measure_runtime "$@" -p${psep}${p} "${test_args}" | avgstddev > "$tmp"
  read avg2 stddev2 vsz2 vszdev2 < "$tmp"
  echo "Average time: ${avg2} +/- ${stddev2} seconds." \
       " VSZ: ${vsz2} +/- ${vszdev2} KB"

  p=4
  test_output="${1}-p${p}.out" measure_runtime "$@" -p${psep}${p} "${test_args}" | avgstddev > "$tmp"
  read avg4 stddev4 vsz4 vszdev4 < "$tmp"
  echo "Average time: ${avg4} +/- ${stddev4} seconds." \
       " VSZ: ${vsz4} +/- ${vszdev4} KB"

  p=1
  test_output="/dev/null" \
  print_runtime_ratio ${avg1} ${stddev1} ${vsz1} ${vszdev1} $VG --tool=none "$@" -p${psep}${p} "${test_args}"

  p=4
  test_output="/dev/null" \
  print_runtime_ratio ${avg4} ${stddev4} ${vsz4} ${vszdev4} $VG --tool=none "$@" -p${psep}${p} "${test_args}"

  p=4
  test_output="${1}-drd-with-stack-var-4.out" \
  print_runtime_ratio ${avg4} ${stddev4} ${vsz4} ${vszdev4} \
    $VG --tool=drd --first-race-only=yes --check-stack-var=yes \
    "$@" -p${psep}${p} "${test_args}"

  p=4
  test_output="${1}-drd-without-stack-var-4.out" \
  print_runtime_ratio ${avg4} ${stddev4} ${vsz4} ${vszdev4} \
    $VG --tool=drd --first-race-only=yes --check-stack-var=no \
   "$@" -p${psep}${p} "${test_args}"

  p=4
  test_output="${1}-helgrind-4.out" \
  print_runtime_ratio ${avg4} ${stddev4} ${vsz4} ${vszdev4} $VG --tool=helgrind "$@" -p${psep}${p} "${test_args}"

  if [ -e $HGDEV_VG ]; then
    p=4
    test_output="${1}-helgrind-hb-4.out" \
    print_runtime_ratio ${avg4} ${stddev4} ${vsz4} ${vszdev4} $HGDEV_VG --tool=helgrind --pure-happens-before=yes "$@" -p${psep}${p} "${test_args}"
  fi

  echo ''

  rm -f "$tmp"
}


########################
# Script body          #
########################

DRD_SCRIPTS_DIR="$(dirname $0)"
if [ "${DRD_SCRIPTS_DIR:0:1}" != "/" ]; then
  DRD_SCRIPTS_DIR="$PWD/$DRD_SCRIPTS_DIR"
fi

SPLASH2="${DRD_SCRIPTS_DIR}/../splash2"
if [ ! -e "${SPLASH2}" ]; then
  echo "Error: splash2 directory not found (${SPLASH2})."
  exit 1
fi

if [ "$VG" = "" ]; then
  VG="${DRD_SCRIPTS_DIR}/../../vg-in-place"
fi

if [ "$HGDEV_VG" = "" ]; then
  HGDEV_VG="${DRD_SCRIPTS_DIR}/../../../valgrind-hgdev/vg-in-place"
fi

if [ ! -e "$VG" ]; then
  echo "Could not find $VG."
  exit 1
fi

######################################################################################################################
# Meaning of the different colums:
#  1. SPLASH2 test name.
#  2. Execution time in seconds for native run with argument -p1.
#  3. Virtual memory size in KB for the native run with argument -p1.
#  4. Execution time in seconds for native run with argument -p2.
#  5. Virtual memory size in KB for the native run with argument -p2.
#  6. Execution time in seconds for native run with argument -p4.
#  7. Virtual memory size in KB for the native run with argument -p4.
#  8. Execution time ratio for --tool=none -p1 versus -p1.
#  9. Virtual memory size ratio for --tool=none -p1 versus -p1.
# 10. Execution time ratio for --tool=none -p4 versus -p4.
# 11. Virtual memory size ratio for --tool=none -p4 versus -p4.
# 12. Execution time ratio for --tool=drd --check-stack-var=yes -p4 versus -p4.
# 13. Virtual memory size ratio for --tool=drd --check-stack-var=yes -p4 versus -p4.
# 14. Execution time ratio for --tool=drd --check-stack-var=no -p4 versus -p4.
# 15. Virtual memory size ratio for --tool=drd --check-stack-var=no -p4 versus -p4.
# 16. Execution time ratio for --tool=helgrind -p4 versus -p4.
# 17. Virtual memory size ratio for --tool=helgrind -p4 versus -p4.
# 18. Execution time ratio for --tool=helgrind --pure-happens-before=yes -p4 versus -p4.
# 19. Virtual memory size ratio for --tool=helgrind --pure-happens-before=yes -p4 versus -p4.
# 20. Execution time ratio for Intel Thread Checker -p4 versus -p4.
# 21. Execution time ratio for Intel Thread Checker -p4 versus -p4.
#
# Notes:
# - Helgrind uses a granularity of one byte for data race detection, while
#   DRD uses a granularity of four bytes.
# - Helgrind does detect data races on stack variables. DRD only detects
#   data races on stack variables with --check-stack-var=yes.
# - Helgrind with --pure-happens-before=yes does not handle atomic variables
#   correctly.  Furthermore, there is an artificial upper limit on the number
#   of segments (--max-segment-set-size=<n>). Both aspects will cause real
#   data races to be suppressed.
# - The ITC tests have been run on a 4-way 2.5 GHz Pentium 4 workstation.
#   Not yet clear to me: have these tests been run on a 32-bit or on a 64-bit
#   OS ? Which OS ? Which granularity does ITC use ? And which m4 macro's
#   have been used by ITC as implementation of the synchronization primitives ?
#
####################################################################################################################################
# Results:                native       native       native       none     none       DRD       DRD      HG         HG-hb     ITC ITC
#                         -p1          -p2          -p4           -p1      -p4       -p4      -p4+f     -p4        -p4     -p4 -p4+f
# ..................................................................................................................................
# Cholesky                0.09  11880  0.06  21888  0.61  41882 12.2 5.07  4.4 2.14   15 1.49  12 2.31   14  3.60   16  4.49 239  82
# FFT                     0.02   6560  0.02  15443  0.02  31493 16.0 8.34 17.5 2.53   89 2.67  97 2.80  310  4.23   86  5.03  90  41
# LU, contiguous          0.07   3968  0.04  12176  0.04  28584 12.3 13.1 22.3 2.69  129 2.80 110 2.95  257  4.49  231  5.36 428 128
# Ocean, contiguous       0.22  16720  0.17  25256  0.15  42392  6.5 3.88 10.3 2.14   57 2.28  48 2.37   77  3.56   82  4.34  90  28
# Radiosity               
# Radix                   0.20  15008  0.11  23200  0.11  39592 13.2 4.21 23.8 2.22   58 2.46  51 2.46  180  3.78   77  4.41 222  56
# Raytrace                0.62 206976  0.48 215168  0.47 231893  8.6 1.23 11.6 1.21  261 1.46 103 1.47  109  2.10   91  4.73 172  53
# Water-n2                0.16  10560  0.09  26944  0.10  59704 13.7 5.63 22.0 1.82 2770 2.44 153 2.37  123  3.09  109  3.66 189  39
# Water-sp                0.19   4312  0.10  13400  0.10  30091 10.8 12.1 20.6 2.57  242 2.80  59 2.80  109  4.26  101  5.13 183  34
# ..................................................................................................................................
# geometric mean          0.13  12823  0.09  25650  0.12  47553 11.3 5.43 14.8 2.08  133 2.24  64 2.40  110  3.55   82  4.61 180  51
# ..................................................................................................................................
# Hardware: dual-core Intel Core2 Duo E6750, 2.66 GHz, 4 MB L2 cache, 2 GB RAM.                                             
# Software: openSUSE 11.0, 64-bit, gcc 4.3.1, runlevel 3.                                                                   
####################################################################################################################################

####
# Notes:
# - The ITC performance numbers in the above table originate from table 1 in
#   the following paper:
#   Paul Sack, Brian E. Bliss, Zhiqiang Ma, Paul Petersen, Josep Torrellas,
#   Accurate and efficient filtering for the Intel thread checker race
#   detector, Proceedings of the 1st workshop on Architectural and system
#   support for improving software dependability, San Jose, California,
#   2006. Pages: 34 - 41.
# - The input parameters for benchmarks below originate from table 1 in the
#   following paper:
#   The SPLASH-2 programs: characterization and methodological considerations
#   Woo, S.C.; Ohara, M.; Torrie, E.; Singh, J.P.; Gupta, A.
#   1995. Proceedings of the 22nd Annual International Symposium on Computer
#   Architecture, 22-24 Jun 1995, Page(s): 24 - 36.
#   ftp://www-flash.stanford.edu/pub/splash2/splash2_isca95.ps.Z
####

cache_size=$(get_cache_size)
log2_cache_size=$(log2 ${cache_size})

# Cholesky
(
  cd ${SPLASH2}/codes/kernels/cholesky/inputs
  for f in *Z
  do
    gzip -cd <$f >${f%.Z}
  done
  test_args=tk15.O run_test ../CHOLESKY -C$((cache_size))
)

# FFT
run_test ${SPLASH2}/codes/kernels/fft/FFT -t -l$((log2_cache_size/2)) -m16

# LU, contiguous blocks.
run_test ${SPLASH2}/codes/kernels/lu/contiguous_blocks/LU -n512

# LU, non-contiguous blocks.
#run_test ${SPLASH2}/codes/kernels/lu/non_contiguous_blocks/LU -n512

# Ocean
run_test ${SPLASH2}/codes/apps/ocean/contiguous_partitions/OCEAN -n258
#run_test ${SPLASH2}/codes/apps/ocean/non_contiguous_partitions/OCEAN -n258

# Radiosity. Runs fine on a 32-bit OS, but deadlocks on a 64-bit OS. Not clear to me why.
if [ $(uname -p) = "i686" ]; then
psep=' ' run_test ${SPLASH2}/codes/apps/radiosity/RADIOSITY -batch -room -ae 5000.0 -en 0.050 -bf 0.10
fi

# Radix
run_test ${SPLASH2}/codes/kernels/radix/RADIX -n$((2**20)) -r1024

# Raytrace
(
  cd ${SPLASH2}/codes/apps/raytrace/inputs
  rm -f *.env *.geo *.rl
  for f in *Z
  do
    gzip -cd <$f >${f%.Z}
  done
  cd ..
  test_args=inputs/car.env psep='' run_test ./RAYTRACE -m64
)

# Water-n2
(
  cd ${SPLASH2}/codes/apps/water-nsquared
  test_input=${DRD_SCRIPTS_DIR}/run-splash2-water-input psep=' ' run_test ./WATER-NSQUARED
)

# Water-sp
(
  cd ${SPLASH2}/codes/apps/water-spatial
  test_input=${DRD_SCRIPTS_DIR}/run-splash2-water-input psep=' ' run_test ./WATER-SPATIAL
)



# Local variables:
# compile-command: "./run-splash2"
# End:
