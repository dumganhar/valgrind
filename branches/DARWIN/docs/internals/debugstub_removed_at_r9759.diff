Index: include/pub_tool_libcfile.h
===================================================================
--- include/pub_tool_libcfile.h	(revision 9748)
+++ include/pub_tool_libcfile.h	(working copy)
@@ -67,7 +67,6 @@
 extern void   VG_(close)  ( Int fd );
 extern Int    VG_(read)   ( Int fd, void* buf, Int count);
 extern Int    VG_(write)  ( Int fd, const void* buf, Int count);
-extern Int    VG_(select) ( Int nfds, void *rfds, void *wfds, void *efds, void *timeout );
 extern Int    VG_(pipe)   ( Int fd[2] );
 extern OffT   VG_(lseek)  ( Int fd, OffT offset, Int whence );
 
Index: coregrind/pub_core_libcfile.h
===================================================================
--- coregrind/pub_core_libcfile.h	(revision 9748)
+++ coregrind/pub_core_libcfile.h	(working copy)
@@ -64,17 +64,12 @@
 extern UShort VG_(ntohs) ( UShort x );
 
 extern Int VG_(socket) ( Int domain, Int type, Int protocol );
-extern Int VG_(bind)   ( Int sock, const struct vki_sockaddr *addr, vki_socklen_t len);
-extern Int VG_(listen) ( Int sock, Int backlog );
-extern Int VG_(accept) ( Int sock, struct vki_sockaddr *addr, vki_socklen_t *len);
 
 extern Int VG_(write_socket)( Int sd, void *msg, Int count );
 extern Int VG_(getsockname) ( Int sd, struct vki_sockaddr *name, Int *namelen );
 extern Int VG_(getpeername) ( Int sd, struct vki_sockaddr *name, Int *namelen );
 extern Int VG_(getsockopt)  ( Int sd, Int level, Int optname, 
                               void *optval, Int *optlen );
-extern Int VG_(setsockopt)  ( Int sd, Int level, Int optname, 
-                              const void *optval, Int optlen);
 
 extern Int VG_(access) ( HChar* path, Bool irusr, Bool iwusr, Bool ixusr );
 
Index: coregrind/m_libcfile.c
===================================================================
--- coregrind/m_libcfile.c	(revision 9750)
+++ coregrind/m_libcfile.c	(working copy)
@@ -166,29 +166,7 @@
    return ret;
 }
 
-Int VG_(select) ( Int nfds, void *rfds, void *wfds, void *efds, void *timeout)
-{
-   Int    ret;
-#  if defined(VGO_darwin)
-   SysRes res = VG_(do_syscall5)(__NR_select_nocancel, nfds,
-                                 (Addr)rfds, (Addr)wfds,
-                                 (Addr)efds, (Addr)timeout);
-#  else
-   SysRes res = VG_(do_syscall5)(__NR_select, nfds,
-                                 (Addr)rfds, (Addr)wfds,
-                                 (Addr)efds, (Addr)timeout);
-#  endif
-   if (sr_isError(res)) {
-      ret = - (Int)(Word)sr_Err(res);
-      vg_assert(ret < 0);
-   } else {
-      ret = (Int)(Word)sr_Res(res);
-      vg_assert(ret >= 0);
-   }
-   return ret;    
-}
 
-
 Int VG_(pipe) ( Int fd[2] )
 {
 #  if defined(VGO_linux) || defined(VGO_aix5)
@@ -852,64 +830,7 @@
 #  endif
 }
 
-Int VG_(bind) ( Int sock, const struct vki_sockaddr *addr, vki_socklen_t len)
-{
-#  if defined(VGO_linux)
-   I_die_here;
 
-#  elif defined(VGO_aix5)
-   I_die_here;
-
-#  elif defined(VGO_darwin)
-   SysRes res;
-   res = VG_(do_syscall3)(__NR_bind, sock, (UWord)addr, (UWord)len);
-   return sr_isError(res) ? -1 : sr_Res(res);
-
-#  else
-#    error "Unknown OS"
-#  endif
-}
-
-
-Int VG_(listen) ( Int sock, Int backlog )
-{
-#  if defined(VGO_linux)
-   I_die_here;
-
-#  elif defined(VGO_aix5)
-   I_die_here;
-
-#  elif defined(VGO_darwin)
-   SysRes res;
-   res = VG_(do_syscall2)(__NR_listen, sock, backlog);
-   return sr_isError(res) ? -1 : sr_Res(res);
-
-#  else
-#    error "Unknown OS"
-#  endif
-}
-
-
-// GrP fixme safe_fd?
-Int VG_(accept) ( Int sock, struct vki_sockaddr *addr, vki_socklen_t *len)
-{
-#  if defined(VGO_linux)
-   I_die_here;
-
-#  elif defined(VGO_aix5)
-   I_die_here;
-
-#  elif defined(VGO_darwin)
-   SysRes res;
-   res = VG_(do_syscall3)(__NR_accept_nocancel, sock, (UWord)addr, (UWord)len);
-   return sr_isError(res) ? -1 : sr_Res(res);
-
-#  else
-#    error "Unknown OS"
-#  endif
-}
-
-
 static
 Int my_connect ( Int sockfd, struct vki_sockaddr_in* serv_addr, 
                  Int addrlen )
@@ -1086,29 +1007,6 @@
 }
 
 
-Int VG_(setsockopt) ( Int sd, Int level, Int optname, const void *optval,
-                      Int optlen)
-{
-#  if defined(VGO_linux)
-   I_die_here;
-
-#  elif defined(VGO_aix5)
-   I_die_here;
-
-#  elif defined(VGO_darwin)
-   SysRes res;
-
-   res = VG_(do_syscall5)( __NR_setsockopt,
-                           (UWord)sd, (UWord)level, (UWord)optname, 
-                           (UWord)optval, (UWord)optlen );
-   return sr_isError(res) ? -1 : sr_Res(res);
-
-#  else
-#    error "Unknown OS"
-#  endif
-}
-
-
 Char *VG_(basename)(const Char *path)
 {
    static Char buf[VKI_PATH_MAX];
