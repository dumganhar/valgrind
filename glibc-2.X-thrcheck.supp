
##----------------------------------------------------------------------##
# Suppressions for the Thrcheck tool when using 
# a glibc-2.{2,3,4,5,6} system

######------ glibc-2.5 specific ------######
{
   thrcheck-glibc25-01
   Thrcheck:Race
   obj:/lib*/ld-2.5.so
   obj:/lib*/ld-2.5.so
   obj:/lib*/ld-2.5.so
}
{
   thrcheck-glibc25-02
   Thrcheck:Race
   obj:/lib*/ld-2.5.so
   obj:/lib*/libc-2.5.so
   obj:/lib*/ld-2.5.so
}
{
   thrcheck-glibc25-03
   Thrcheck:Race
   obj:/lib*/ld-2.5.so
   obj:/lib*/libc-2.5.so
   obj:/lib*/libc-2.5.so
}
{
   thrcheck-glibc25-04
   Thrcheck:Race
   obj:/lib*/libc-2.5.so
   obj:/lib*/libc-2.5.so
}
{
   thrcheck-glibc25-05
   Thrcheck:Race
   obj:/lib*/libpthread-2.5.so
   obj:/lib*/libpthread-2.5.so
   obj:/lib*/libpthread-2.5.so
}
{
   thrcheck-glibc25-06
   Thrcheck:Race
   obj:/lib*/libpthread-2.5.so
   obj:/lib*/libpthread-2.5.so
   obj:/lib*/libc-2.5.so
}
{
   thrcheck-glibc25-07
   Thrcheck:Race
   obj:/lib*/ld-2.5.so
   obj:/lib*/libc-2.5.so
   obj:/lib*/libdl-2.5.so
}
{
   thrcheck-glibc25-08
   Thrcheck:Race
   obj:/lib*/libpthread-2.5.so
   obj:/lib*/libc-2.5.so
}

# These are very ugly.  They are needed to suppress errors inside (eg)
# NPTL's pthread_cond_signal.  Why only one stack frame -- at least we
# should see the wrapper calling the real functions, right?
# Unfortunately, no: the real functions are handwritten assembly (in
# the glibc-2.5 sources) and does not create a proper stack frame.
# Therefore it's only one level of unwinding before we're back out in
# user code rather than the 2 levels you'd expect.
{
   thrcheck-glibc25-10
   Thrcheck:Race
   obj:/lib*/libpthread-2.5.so
   fun:pthread_*
}
{
   thrcheck-glibc25-11
   Thrcheck:Race
   fun:mythread_wrapper
   obj:/lib*/libpthread-2.5.so
}
{
   thrcheck-glibc25-12
   Thrcheck:Race
   fun:pthread_cond_*@@GLIBC_2.3.2
}
{
   thrcheck-glibc25-13
   Thrcheck:Race
   fun:__lll_mutex_*
}
{
   thrcheck-glibc25-14
   Thrcheck:Race
   fun:pthread_rwlock_*lock*
}


#aa###--- glibc-2.6.1 specific ---###
#aa{
#aa   thrcheck-glibc26-ld261-64bit-1
#aa   Thrcheck:Race
#aa   obj:/lib64/ld-2.6.1.so
#aa   obj:/lib64/ld-2.6.1.so
#aa   obj:/lib64/ld-2.6.1.so
#aa}
#aa{
#aa   thrcheck-glibc26-ld261-32bit-1
#aa   Thrcheck:Race
#aa   obj:/lib/ld-2.6.1.so
#aa   obj:/lib/ld-2.6.1.so
#aa   obj:/lib/ld-2.6.1.so
#aa}

######------ qt4 specific (GNU mangling) ------######
{
   thrcheck-qt4-QMutex::lock()-twice
   Thrcheck:Race
   fun:_ZN6QMutex4lockEv
   fun:_ZN6QMutex4lockEv
}
